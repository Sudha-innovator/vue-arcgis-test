{"remainingRequest":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\src\\components\\WebMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\src\\components\\WebMap.vue","mtime":1587963039946},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\test12\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6XFxVc2Vyc1xcU3VkaGEuUGFuY2hhcGFydWxhXFxEZXNrdG9wXFxTdWRoYS1kb2NzXFxWdWUtUHJvamVjdHNcXHRlc3QxMlxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7Ci8vCi8vCi8vCi8vCmltcG9ydCB7IGxvYWRNb2R1bGVzIH0gZnJvbSAnZXNyaS1sb2FkZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3dlYi1tYXAnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWdGcm9tV2ViTWFwOiBmYWxzZSAvL25lZWQgdG8gYWRqdXN0IGNvZGUgZm9yIEFkZExheWVyIGJ1dHRvbiBpbiB0aGUgSW5wdXRzLnZ1ZQoKICAgIH07CiAgfSwKCiAgLyoNCiAgICAvL2lmIEkgdXNlICRlbWl0LCBuZWVkIHRvIGdldCB0aGUgdmFsdWUgZnJvbSB0aGUgcGFyZW50IGNvbXBvbmVudC0gQXBwLnZ1ZSAgIA0KICAgIHByb3BzOiB7ICAgDQogICAgICAgIGFkZExheWVyOiB7DQogICAgICAgICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICAgICAgfQ0KICANCiAgICB9LCAqLwogIGNvbXB1dGVkOiB7CiAgICBjb3VudHJ5bmFtZTogZnVuY3Rpb24gY291bnRyeW5hbWUoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldE5hbWU7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgY291bnRyeW5hbWU6IGZ1bmN0aW9uIGNvdW50cnluYW1lKHZhbCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2V0TmFtZScsIHZhbCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5sb2FkTWFwKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2FkTWFwOiBmdW5jdGlvbiBsb2FkTWFwKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy90aGlzIC0+IHJlZmVycyB0byB0aGUgdnVlIGluc3RhbmNlCiAgICAgIHZhciB0aGF0ID0gdGhpczsgLy8gbGF6eSBsb2FkIHRoZSByZXF1aXJlZCBBcmNHSVMgQVBJIGZvciBKYXZhU2NyaXB0IG1vZHVsZXMgYW5kIENTUwoKICAgICAgbG9hZE1vZHVsZXMoWydlc3JpL01hcCcsICdlc3JpL3ZpZXdzL01hcFZpZXcnLCAnZXNyaS9sYXllcnMvRmVhdHVyZUxheWVyJ10sIHsKICAgICAgICBjc3M6IHRydWUKICAgICAgfSkudGhlbihmdW5jdGlvbiAoX3JlZikgewogICAgICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDMpLAogICAgICAgICAgICBBcmNHSVNNYXAgPSBfcmVmMlswXSwKICAgICAgICAgICAgTWFwVmlldyA9IF9yZWYyWzFdLAogICAgICAgICAgICBGZWF0dXJlTGF5ZXIgPSBfcmVmMlsyXTsKCiAgICAgICAgLy90aGlzIC0tID5yZWZlcnMgdG8gbG9hZG1vZHVsZXMKICAgICAgICB2YXIgbWFwID0gbmV3IEFyY0dJU01hcCh7CiAgICAgICAgICBiYXNlbWFwOiAndG9wby12ZWN0b3InCiAgICAgICAgfSk7CiAgICAgICAgdmFyIGZpcmVQb2ludHNMYXllciA9IG5ldyBGZWF0dXJlTGF5ZXIoewogICAgICAgICAgdXJsOiAiaHR0cHM6Ly9zZXJ2aWNlczcuYXJjZ2lzLmNvbS9XU2lVbVVobEZ4NEN0TUJCL2FyY2dpcy9yZXN0L3NlcnZpY2VzL0ZJUk1TX0FjdGl2ZV9GaXJlX1BvaW50c19BdXN0cmFsaWFfRmlyZXMvRmVhdHVyZVNlcnZlci8wIgogICAgICAgIH0pOwoKICAgICAgICBpZiAoX3RoaXMudGFnRnJvbVdlYk1hcCkgewogICAgICAgICAgLy9uZWVkcyB0byBhZGQgbW9yZSBjaGFuZ2VzCiAgICAgICAgICBtYXAuYWRkKGZpcmVQb2ludHNMYXllcik7CiAgICAgICAgfQoKICAgICAgICB2YXIgd29ybGRDb3VudHJpZXMgPSBuZXcgRmVhdHVyZUxheWVyKHsKICAgICAgICAgIHVybDogImh0dHBzOi8vc2VydmljZXMuYXJjZ2lzLmNvbS9QM2VQTE1ZczJSVkNoa0p4L0FyY0dJUy9yZXN0L3NlcnZpY2VzL1dvcmxkX0NvdW50cmllc18oR2VuZXJhbGl6ZWQpL0ZlYXR1cmVTZXJ2ZXIvMCIsCiAgICAgICAgICBvdXRGaWVsZHM6ICcqJwogICAgICAgIH0pOwogICAgICAgIG1hcC5hZGQod29ybGRDb3VudHJpZXMpOwogICAgICAgIHZhciB2aWV3ID0gbmV3IE1hcFZpZXcoewogICAgICAgICAgY29udGFpbmVyOiBfdGhpcy4kZWwsCiAgICAgICAgICBtYXA6IG1hcCwKICAgICAgICAgIGNlbnRlcjogWzE0NCwgLTI0XSwKICAgICAgICAgIHpvb206IDIsCiAgICAgICAgICBoaWdobGlnaHRPcHRpb25zOiB7CiAgICAgICAgICAgIGNvbG9yOiAnb3JhbmdlJywKICAgICAgICAgICAgZmlsbE9wYWNpdHk6IDAuNQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHZhciBoaWdobGlnaHQsIGN1cnJOYW1lOwogICAgICAgIHZpZXcud2hlbkxheWVyVmlldyh3b3JsZENvdW50cmllcykudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICB2aWV3Lm9uKCJwb2ludGVyLW1vdmUiLCBldmVudEhhbmRsZXIpOwogICAgICAgIH0pOwoKICAgICAgICBmdW5jdGlvbiBldmVudEhhbmRsZXIoZXZlbnQpIHsKICAgICAgICAgIHZpZXcuaGl0VGVzdChldmVudCkudGhlbihnZXRHcmFwaGljcyk7CiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBnZXRHcmFwaGljcyhyZXNwb25zZSkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLnJlc3VsdHMubGVuZ3RoKSB7CiAgICAgICAgICAgIHZhciBncmFwaGljID0gcmVzcG9uc2UucmVzdWx0cy5maWx0ZXIoZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgIHJldHVybiByZXN1bHQuZ3JhcGhpYy5sYXllciA9PT0gd29ybGRDb3VudHJpZXM7CiAgICAgICAgICAgIH0pWzBdLmdyYXBoaWM7CiAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVzID0gZ3JhcGhpYy5hdHRyaWJ1dGVzOwogICAgICAgICAgICB2YXIgbmFtZSA9IGF0dHJpYnV0ZXMuQ09VTlRSWTsKCiAgICAgICAgICAgIGlmIChoaWdobGlnaHQgJiYgY3Vyck5hbWUgIT09IG5hbWUpIHsKICAgICAgICAgICAgICBoaWdobGlnaHQucmVtb3ZlKCk7CiAgICAgICAgICAgICAgaGlnaGxpZ2h0ID0gbnVsbDsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChoaWdobGlnaHQpIHsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZpZXcud2hlbkxheWVyVmlldyh3b3JsZENvdW50cmllcykudGhlbihmdW5jdGlvbiAobGF5ZXJWaWV3KSB7CiAgICAgICAgICAgICAgaGlnaGxpZ2h0ID0gbGF5ZXJWaWV3LmhpZ2hsaWdodChncmFwaGljKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGN1cnJOYW1lID0gbmFtZTsKICAgICAgICAgICAgdGhhdC4kc3RvcmUuZGlzcGF0Y2goJ3NldE5hbWUnLCBuYW1lKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGhpZ2hsaWdodC5yZW1vdmUoKTsgLy9yZW1vdmUgdGhlIGhpZ2hsaWdodCBpZiBubyBmZWF0dXJlcyBhcmUgcmV0dXJuZWQgZnJvbSB0aGUgaGl0VGVzdAoKICAgICAgICAgICAgaGlnaGxpZ2h0ID0gbnVsbDsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGlmICh0aGlzLnZpZXcpIHsKICAgICAgLy8gZGVzdHJveSB0aGUgbWFwIHZpZXcKICAgICAgdGhpcy52aWV3LmNvbnRhaW5lciA9IG51bGw7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["WebMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div></div>\r\n</template>\r\n\r\n<script>\r\nimport { loadModules } from 'esri-loader';\r\n\r\nexport default {\r\n  name: 'web-map',\r\n  data: () => ({\r\n      tagFromWebMap: false,  //need to adjust code for AddLayer button in the Inputs.vue\r\n\r\n  }),\r\n/*\r\n  //if I use $emit, need to get the value from the parent component- App.vue   \r\n  props: {   \r\n      addLayer: {\r\n          type: Boolean,\r\n          required: true\r\n      }\r\n\r\n  }, */\r\n    computed: {\r\n    countryname() {\r\n        return this.$store.getters.getName;\r\n    }\r\n\r\n    }, \r\n    watch:{\r\n       \r\n    countryname(val)\r\n    {\r\n        this.$store.dispatch('setName', val);\r\n    }\r\n\r\n    },\r\n\r\n  mounted() {\r\n\r\n      this.loadMap();\r\n\r\n  }, \r\n\r\n  methods:{\r\n      loadMap(){\r\n          //this -> refers to the vue instance\r\n          let that = this;\r\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n        loadModules(['esri/Map', 'esri/views/MapView', 'esri/layers/FeatureLayer'], { css: true })\r\n        .then(([ArcGISMap, MapView, FeatureLayer]) => {\r\n            //this -- >refers to loadmodules\r\n            \r\n            const map = new ArcGISMap({\r\n                basemap: 'topo-vector'\r\n            });\r\n            \r\n            var firePointsLayer = new FeatureLayer({\r\n                url: \"https://services7.arcgis.com/WSiUmUhlFx4CtMBB/arcgis/rest/services/FIRMS_Active_Fire_Points_Australia_Fires/FeatureServer/0\"\r\n            });\r\n\r\n             if(this.tagFromWebMap){   //needs to add more changes\r\n                map.add(firePointsLayer);\r\n            } \r\n           \r\n\r\n            var worldCountries = new FeatureLayer({\r\n                url: \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0\",\r\n                outFields: '*',\r\n            }); \r\n\r\n            map.add(worldCountries);\r\n\r\n\r\n\r\n            var view = new MapView({\r\n                container: this.$el,\r\n                map: map,\r\n                center: [144, -24],\r\n                zoom: 2,\r\n                highlightOptions: {\r\n                    color: 'orange',\r\n                    fillOpacity: 0.5,\r\n                }\r\n            });\r\n\r\n\r\n            var highlight, currName;\r\n            view.whenLayerView(worldCountries).then(function () {\r\n                view.on(\"pointer-move\", eventHandler);\r\n            });\r\n\r\n            function eventHandler(event) {\r\n                view.hitTest(event).then(getGraphics);\r\n            }\r\n\r\n            function getGraphics(response) {\r\n                if (response.results.length) {\r\n                    \r\n                    var graphic = response.results.filter(function (result) {\r\n                        return result.graphic.layer === worldCountries;\r\n                    })[0].graphic;\r\n\r\n\r\n                   var attributes = graphic.attributes;\r\n                    var name = attributes.COUNTRY;\r\n\r\n                    if (highlight && (currName !== name)) {\r\n                        highlight.remove();\r\n                        highlight = null;\r\n                        return;\r\n                    }\r\n                    if (highlight) {\r\n                        return;\r\n                    }\r\n\r\n                    view.whenLayerView(worldCountries).then(function (layerView) {\r\n                        highlight = layerView.highlight(graphic);\r\n                    });\r\n\r\n                    currName = name;\r\n                   that.$store.dispatch('setName', name);\r\n\r\n\r\n                } else {\r\n                    highlight.remove(); //remove the highlight if no features are returned from the hitTest\r\n                    highlight = null;\r\n                }\r\n\r\n            }\r\n\r\n            \r\n        });\r\n\r\n   },\r\n\r\n  },\r\n  beforeDestroy() {\r\n    if (this.view) {\r\n      // destroy the map view\r\n      this.view.container = null;\r\n    }\r\n  }\r\n\r\n\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}