{"remainingRequest":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\Vue-arcgis-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\Vue-arcgis-test\\src\\components\\WebMap.vue?vue&type=style&index=0&id=526d6398&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\Vue-arcgis-test\\src\\components\\WebMap.vue","mtime":1587965931318},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\Vue-arcgis-test\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\Vue-arcgis-test\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\Vue-arcgis-test\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\Vue-arcgis-test\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\Vue-arcgis-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sudha.Panchaparula\\Desktop\\Sudha-docs\\Vue-Projects\\Vue-arcgis-test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KZGl2IHsNCiAgcGFkZGluZzogMDsNCiAgbWFyZ2luOiAwOw0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAxMDAlOw0KfQ0K"},{"version":3,"sources":["WebMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA;AACA;AACA;AACA","file":"WebMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div></div>\r\n</template>\r\n\r\n<script>\r\nimport { loadModules } from 'esri-loader';\r\n\r\nexport default {\r\n  name: 'web-map',\r\n  data: () => ({\r\n      tagFromWebMap: false,  //need to adjust code for AddLayer button in the Inputs.vue\r\n\r\n  }),\r\n/*\r\n  //if I use $emit, need to get the value from the parent component- App.vue   \r\n  props: {   \r\n      addLayer: {\r\n          type: Boolean,\r\n          required: true\r\n      }\r\n\r\n  }, \r\n    computed: {\r\n    countryname() {\r\n        return this.$store.getters.getName;\r\n    }\r\n\r\n    }, \r\n    watch:{\r\n       \r\n    countryname(val)\r\n    {\r\n        this.$store.dispatch('setName', val);\r\n    }\r\n\r\n    },*/\r\n\r\n  mounted() {\r\n\r\n      this.loadMap();\r\n\r\n  }, \r\n\r\n  methods:{\r\n      loadMap(){\r\n          //this -> refers to the vue instance\r\n          let that = this;\r\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n        loadModules(['esri/Map', 'esri/views/MapView', 'esri/layers/FeatureLayer'], { css: true })\r\n        .then(([ArcGISMap, MapView, FeatureLayer]) => {\r\n            //this -- >refers to loadmodules\r\n            \r\n            const map = new ArcGISMap({\r\n                basemap: 'topo-vector'\r\n            });\r\n            \r\n            var firePointsLayer = new FeatureLayer({\r\n                url: \"https://services7.arcgis.com/WSiUmUhlFx4CtMBB/arcgis/rest/services/FIRMS_Active_Fire_Points_Australia_Fires/FeatureServer/0\"\r\n            });\r\n\r\n             if(this.tagFromWebMap){   //needs to add more code for Add Layer button\r\n                map.add(firePointsLayer);\r\n            } \r\n           \r\n\r\n            var worldCountries = new FeatureLayer({\r\n                url: \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/World_Countries_(Generalized)/FeatureServer/0\",\r\n                outFields: '*',\r\n            }); \r\n\r\n            map.add(worldCountries);\r\n\r\n\r\n\r\n            var view = new MapView({\r\n                container: this.$el,\r\n                map: map,\r\n                center: [144, -24],\r\n                zoom: 2,\r\n                highlightOptions: {\r\n                    color: 'orange',\r\n                    fillOpacity: 0.5,\r\n                }\r\n            });\r\n\r\n\r\n            var highlight, currName;\r\n            view.whenLayerView(worldCountries).then(function () {\r\n                view.on(\"pointer-move\", eventHandler);\r\n            });\r\n\r\n            function eventHandler(event) {\r\n                view.hitTest(event).then(getGraphics);\r\n            }\r\n\r\n            function getGraphics(response) {\r\n                if (response.results.length) {\r\n                    \r\n                    var graphic = response.results.filter(function (result) {\r\n                        return result.graphic.layer === worldCountries;\r\n                    })[0].graphic;\r\n\r\n\r\n                   var attributes = graphic.attributes;\r\n                    var name = attributes.COUNTRY;\r\n\r\n                    if (highlight && (currName !== name)) {\r\n                        highlight.remove();\r\n                        highlight = null;\r\n                        return;\r\n                    }\r\n                    if (highlight) {\r\n                        return;\r\n                    }\r\n\r\n                    view.whenLayerView(worldCountries).then(function (layerView) {\r\n                        highlight = layerView.highlight(graphic);\r\n                    });\r\n\r\n                    currName = name;\r\n                   that.$store.dispatch('setName', name);  //update the value to $store\r\n\r\n\r\n                } else {\r\n                    highlight.remove(); //remove the highlight if no features are returned from the hitTest\r\n                    highlight = null;\r\n                }\r\n\r\n            }\r\n\r\n            \r\n        });\r\n\r\n   },\r\n\r\n  },\r\n  beforeDestroy() {\r\n    if (this.view) {\r\n      // destroy the map view\r\n      this.view.container = null;\r\n    }\r\n  }\r\n\r\n\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>"]}]}